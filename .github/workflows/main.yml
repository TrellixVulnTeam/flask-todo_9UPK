# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-aws-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME: "my-flask-todo-app"
  EB_APPLICATION_NAME: "flask-todo-app"
  EB_ENVIRONMENT_NAME: "FlaskTodoApp-env"
  DEPLOY_PACKAGE_NAME: "flask-app-${{ github.sha }}.zip"
  AWS_REGION_NAME: "us-east-2"

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
     
  my_ci_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: GIT clone from repository
        uses: actions/checkout@v1 
     
      - name: Create Zip deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -X *.git*
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: us-east-2
        
      - name: copy deployment package to s3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
      
      - name: print result of CI Pipeline
        run: echo "CI Pipeline part finished successfully"
    
  my_cd_pipeline:
    runs-on: ubuntu-latest
    needs: [my_ci_pipeline]
    steps: 
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: us-east-2
       
       
      - name: create new ElasticBeanstalk Application Version
        run: |
            aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
            --version-label "Ver-${{ github.sha }}" \
            --description "CommitSHA-${{ github.sha }}"
       
      - name: deploy application version
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
             
      
      
      - name: print result of CD pipeline
        run: echo "CD Pipeline part finished successfully"
           

       
  test:
    runs-on: ubuntu-latest
    needs: [my_cd_pipeline]
    steps:
      - name: run test project test
        uses: fjogeleit/http-request-action@v1.3.1
        with:
          url: 'https://api.testproject.io/v2/projects/jrKiet1cHEyKBTcZMmLoMg/jobs/heb20uUMlkSeTvaM8K8fFg/run'
          method: POST
          Authorization: 'SGf6VJctehppP1PLlYNZ5q4FNiQVY7wY1'
          run: echo response
